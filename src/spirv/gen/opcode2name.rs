//! THIS IS A GENERATED SOURCE. MODIFICATION WILL BE OVERWRITTEN.
//! @PENGUINLIONG
use crate::spv::OpCode;

pub(crate) fn opcode2name(opcode: OpCode) -> &'static str {
  match opcode {
    0 => "Nop",
    1 => "Undef",
    2 => "SourceContinued",
    3 => "Source",
    4 => "SourceExtension",
    5 => "Name",
    6 => "MemberName",
    7 => "String",
    8 => "Line",
    10 => "Extension",
    11 => "ExtInstImport",
    12 => "ExtInst",
    14 => "MemoryModel",
    15 => "EntryPoint",
    16 => "ExecutionMode",
    17 => "Capability",
    19 => "TypeVoid",
    20 => "TypeBool",
    21 => "TypeInt",
    22 => "TypeFloat",
    23 => "TypeVector",
    24 => "TypeMatrix",
    25 => "TypeImage",
    26 => "TypeSampler",
    27 => "TypeSampledImage",
    28 => "TypeArray",
    29 => "TypeRuntimeArray",
    30 => "TypeStruct",
    31 => "TypeOpaque",
    32 => "TypePointer",
    33 => "TypeFunction",
    34 => "TypeEvent",
    35 => "TypeDeviceEvent",
    36 => "TypeReserveId",
    37 => "TypeQueue",
    38 => "TypePipe",
    39 => "TypeForwardPointer",
    41 => "ConstantTrue",
    42 => "ConstantFalse",
    43 => "Constant",
    44 => "ConstantComposite",
    45 => "ConstantSampler",
    46 => "ConstantNull",
    48 => "SpecConstantTrue",
    49 => "SpecConstantFalse",
    50 => "SpecConstant",
    51 => "SpecConstantComposite",
    52 => "SpecConstantOp",
    54 => "Function",
    55 => "FunctionParameter",
    56 => "FunctionEnd",
    57 => "FunctionCall",
    59 => "Variable",
    60 => "ImageTexelPointer",
    61 => "Load",
    62 => "Store",
    63 => "CopyMemory",
    64 => "CopyMemorySized",
    65 => "AccessChain",
    66 => "InBoundsAccessChain",
    67 => "PtrAccessChain",
    68 => "ArrayLength",
    69 => "GenericPtrMemSemantics",
    70 => "InBoundsPtrAccessChain",
    71 => "Decorate",
    72 => "MemberDecorate",
    73 => "DecorationGroup",
    74 => "GroupDecorate",
    75 => "GroupMemberDecorate",
    77 => "VectorExtractDynamic",
    78 => "VectorInsertDynamic",
    79 => "VectorShuffle",
    80 => "CompositeConstruct",
    81 => "CompositeExtract",
    82 => "CompositeInsert",
    83 => "CopyObject",
    84 => "Transpose",
    86 => "SampledImage",
    87 => "ImageSampleImplicitLod",
    88 => "ImageSampleExplicitLod",
    89 => "ImageSampleDrefImplicitLod",
    90 => "ImageSampleDrefExplicitLod",
    91 => "ImageSampleProjImplicitLod",
    92 => "ImageSampleProjExplicitLod",
    93 => "ImageSampleProjDrefImplicitLod",
    94 => "ImageSampleProjDrefExplicitLod",
    95 => "ImageFetch",
    96 => "ImageGather",
    97 => "ImageDrefGather",
    98 => "ImageRead",
    99 => "ImageWrite",
    100 => "Image",
    101 => "ImageQueryFormat",
    102 => "ImageQueryOrder",
    103 => "ImageQuerySizeLod",
    104 => "ImageQuerySize",
    105 => "ImageQueryLod",
    106 => "ImageQueryLevels",
    107 => "ImageQuerySamples",
    109 => "ConvertFToU",
    110 => "ConvertFToS",
    111 => "ConvertSToF",
    112 => "ConvertUToF",
    113 => "UConvert",
    114 => "SConvert",
    115 => "FConvert",
    116 => "QuantizeToF16",
    117 => "ConvertPtrToU",
    118 => "SatConvertSToU",
    119 => "SatConvertUToS",
    120 => "ConvertUToPtr",
    121 => "PtrCastToGeneric",
    122 => "GenericCastToPtr",
    123 => "GenericCastToPtrExplicit",
    124 => "Bitcast",
    126 => "SNegate",
    127 => "FNegate",
    128 => "IAdd",
    129 => "FAdd",
    130 => "ISub",
    131 => "FSub",
    132 => "IMul",
    133 => "FMul",
    134 => "UDiv",
    135 => "SDiv",
    136 => "FDiv",
    137 => "UMod",
    138 => "SRem",
    139 => "SMod",
    140 => "FRem",
    141 => "FMod",
    142 => "VectorTimesScalar",
    143 => "MatrixTimesScalar",
    144 => "VectorTimesMatrix",
    145 => "MatrixTimesVector",
    146 => "MatrixTimesMatrix",
    147 => "OuterProduct",
    148 => "Dot",
    149 => "IAddCarry",
    150 => "ISubBorrow",
    151 => "UMulExtended",
    152 => "SMulExtended",
    154 => "Any",
    155 => "All",
    156 => "IsNan",
    157 => "IsInf",
    158 => "IsFinite",
    159 => "IsNormal",
    160 => "SignBitSet",
    161 => "LessOrGreater",
    162 => "Ordered",
    163 => "Unordered",
    164 => "LogicalEqual",
    165 => "LogicalNotEqual",
    166 => "LogicalOr",
    167 => "LogicalAnd",
    168 => "LogicalNot",
    169 => "Select",
    170 => "IEqual",
    171 => "INotEqual",
    172 => "UGreaterThan",
    173 => "SGreaterThan",
    174 => "UGreaterThanEqual",
    175 => "SGreaterThanEqual",
    176 => "ULessThan",
    177 => "SLessThan",
    178 => "ULessThanEqual",
    179 => "SLessThanEqual",
    180 => "FOrdEqual",
    181 => "FUnordEqual",
    182 => "FOrdNotEqual",
    183 => "FUnordNotEqual",
    184 => "FOrdLessThan",
    185 => "FUnordLessThan",
    186 => "FOrdGreaterThan",
    187 => "FUnordGreaterThan",
    188 => "FOrdLessThanEqual",
    189 => "FUnordLessThanEqual",
    190 => "FOrdGreaterThanEqual",
    191 => "FUnordGreaterThanEqual",
    194 => "ShiftRightLogical",
    195 => "ShiftRightArithmetic",
    196 => "ShiftLeftLogical",
    197 => "BitwiseOr",
    198 => "BitwiseXor",
    199 => "BitwiseAnd",
    200 => "Not",
    201 => "BitFieldInsert",
    202 => "BitFieldSExtract",
    203 => "BitFieldUExtract",
    204 => "BitReverse",
    205 => "BitCount",
    207 => "DPdx",
    208 => "DPdy",
    209 => "Fwidth",
    210 => "DPdxFine",
    211 => "DPdyFine",
    212 => "FwidthFine",
    213 => "DPdxCoarse",
    214 => "DPdyCoarse",
    215 => "FwidthCoarse",
    218 => "EmitVertex",
    219 => "EndPrimitive",
    220 => "EmitStreamVertex",
    221 => "EndStreamPrimitive",
    224 => "ControlBarrier",
    225 => "MemoryBarrier",
    227 => "AtomicLoad",
    228 => "AtomicStore",
    229 => "AtomicExchange",
    230 => "AtomicCompareExchange",
    231 => "AtomicCompareExchangeWeak",
    232 => "AtomicIIncrement",
    233 => "AtomicIDecrement",
    234 => "AtomicIAdd",
    235 => "AtomicISub",
    236 => "AtomicSMin",
    237 => "AtomicUMin",
    238 => "AtomicSMax",
    239 => "AtomicUMax",
    240 => "AtomicAnd",
    241 => "AtomicOr",
    242 => "AtomicXor",
    245 => "Phi",
    246 => "LoopMerge",
    247 => "SelectionMerge",
    248 => "Label",
    249 => "Branch",
    250 => "BranchConditional",
    251 => "Switch",
    252 => "Kill",
    253 => "Return",
    254 => "ReturnValue",
    255 => "Unreachable",
    256 => "LifetimeStart",
    257 => "LifetimeStop",
    259 => "GroupAsyncCopy",
    260 => "GroupWaitEvents",
    261 => "GroupAll",
    262 => "GroupAny",
    263 => "GroupBroadcast",
    264 => "GroupIAdd",
    265 => "GroupFAdd",
    266 => "GroupFMin",
    267 => "GroupUMin",
    268 => "GroupSMin",
    269 => "GroupFMax",
    270 => "GroupUMax",
    271 => "GroupSMax",
    274 => "ReadPipe",
    275 => "WritePipe",
    276 => "ReservedReadPipe",
    277 => "ReservedWritePipe",
    278 => "ReserveReadPipePackets",
    279 => "ReserveWritePipePackets",
    280 => "CommitReadPipe",
    281 => "CommitWritePipe",
    282 => "IsValidReserveId",
    283 => "GetNumPipePackets",
    284 => "GetMaxPipePackets",
    285 => "GroupReserveReadPipePackets",
    286 => "GroupReserveWritePipePackets",
    287 => "GroupCommitReadPipe",
    288 => "GroupCommitWritePipe",
    291 => "EnqueueMarker",
    292 => "EnqueueKernel",
    293 => "GetKernelNDrangeSubGroupCount",
    294 => "GetKernelNDrangeMaxSubGroupSize",
    295 => "GetKernelWorkGroupSize",
    296 => "GetKernelPreferredWorkGroupSizeMultiple",
    297 => "RetainEvent",
    298 => "ReleaseEvent",
    299 => "CreateUserEvent",
    300 => "IsValidEvent",
    301 => "SetUserEventStatus",
    302 => "CaptureEventProfilingInfo",
    303 => "GetDefaultQueue",
    304 => "BuildNDRange",
    305 => "ImageSparseSampleImplicitLod",
    306 => "ImageSparseSampleExplicitLod",
    307 => "ImageSparseSampleDrefImplicitLod",
    308 => "ImageSparseSampleDrefExplicitLod",
    309 => "ImageSparseSampleProjImplicitLod",
    310 => "ImageSparseSampleProjExplicitLod",
    311 => "ImageSparseSampleProjDrefImplicitLod",
    312 => "ImageSparseSampleProjDrefExplicitLod",
    313 => "ImageSparseFetch",
    314 => "ImageSparseGather",
    315 => "ImageSparseDrefGather",
    316 => "ImageSparseTexelsResident",
    317 => "NoLine",
    318 => "AtomicFlagTestAndSet",
    319 => "AtomicFlagClear",
    320 => "ImageSparseRead",
    321 => "SizeOf",
    322 => "TypePipeStorage",
    323 => "ConstantPipeStorage",
    324 => "CreatePipeFromPipeStorage",
    325 => "GetKernelLocalSizeForSubgroupCount",
    326 => "GetKernelMaxNumSubgroups",
    327 => "TypeNamedBarrier",
    328 => "NamedBarrierInitialize",
    329 => "MemoryNamedBarrier",
    330 => "ModuleProcessed",
    331 => "ExecutionModeId",
    332 => "DecorateId",
    333 => "GroupNonUniformElect",
    334 => "GroupNonUniformAll",
    335 => "GroupNonUniformAny",
    336 => "GroupNonUniformAllEqual",
    337 => "GroupNonUniformBroadcast",
    338 => "GroupNonUniformBroadcastFirst",
    339 => "GroupNonUniformBallot",
    340 => "GroupNonUniformInverseBallot",
    341 => "GroupNonUniformBallotBitExtract",
    342 => "GroupNonUniformBallotBitCount",
    343 => "GroupNonUniformBallotFindLSB",
    344 => "GroupNonUniformBallotFindMSB",
    345 => "GroupNonUniformShuffle",
    346 => "GroupNonUniformShuffleXor",
    347 => "GroupNonUniformShuffleUp",
    348 => "GroupNonUniformShuffleDown",
    349 => "GroupNonUniformIAdd",
    350 => "GroupNonUniformFAdd",
    351 => "GroupNonUniformIMul",
    352 => "GroupNonUniformFMul",
    353 => "GroupNonUniformSMin",
    354 => "GroupNonUniformUMin",
    355 => "GroupNonUniformFMin",
    356 => "GroupNonUniformSMax",
    357 => "GroupNonUniformUMax",
    358 => "GroupNonUniformFMax",
    359 => "GroupNonUniformBitwiseAnd",
    360 => "GroupNonUniformBitwiseOr",
    361 => "GroupNonUniformBitwiseXor",
    362 => "GroupNonUniformLogicalAnd",
    363 => "GroupNonUniformLogicalOr",
    364 => "GroupNonUniformLogicalXor",
    365 => "GroupNonUniformQuadBroadcast",
    366 => "GroupNonUniformQuadSwap",
    400 => "CopyLogical",
    401 => "PtrEqual",
    402 => "PtrNotEqual",
    403 => "PtrDiff",
    4416 => "TerminateInvocation",
    4421 => "SubgroupBallotKHR",
    4422 => "SubgroupFirstInvocationKHR",
    4428 => "SubgroupAllKHR",
    4429 => "SubgroupAnyKHR",
    4430 => "SubgroupAllEqualKHR",
    4432 => "SubgroupReadInvocationKHR",
    4445 => "TraceRayKHR",
    4446 => "ExecuteCallableKHR",
    4447 => "ConvertUToAccelerationStructureKHR",
    4448 => "IgnoreIntersectionKHR",
    4449 => "TerminateRayKHR",
    4450 => "SDotKHR",
    4451 => "UDotKHR",
    4452 => "SUDotKHR",
    4453 => "SDotAccSatKHR",
    4454 => "UDotAccSatKHR",
    4455 => "SUDotAccSatKHR",
    4472 => "TypeRayQueryKHR",
    4473 => "RayQueryInitializeKHR",
    4474 => "RayQueryTerminateKHR",
    4475 => "RayQueryGenerateIntersectionKHR",
    4476 => "RayQueryConfirmIntersectionKHR",
    4477 => "RayQueryProceedKHR",
    4479 => "RayQueryGetIntersectionTypeKHR",
    5000 => "GroupIAddNonUniformAMD",
    5001 => "GroupFAddNonUniformAMD",
    5002 => "GroupFMinNonUniformAMD",
    5003 => "GroupUMinNonUniformAMD",
    5004 => "GroupSMinNonUniformAMD",
    5005 => "GroupFMaxNonUniformAMD",
    5006 => "GroupUMaxNonUniformAMD",
    5007 => "GroupSMaxNonUniformAMD",
    5011 => "FragmentMaskFetchAMD",
    5012 => "FragmentFetchAMD",
    5056 => "ReadClockKHR",
    5283 => "ImageSampleFootprintNV",
    5296 => "GroupNonUniformPartitionNV",
    5299 => "WritePackedPrimitiveIndices4x8NV",
    5334 => "ReportIntersectionNV",
    // Ignored alias op OpReportIntersectionKHR.
    5335 => "IgnoreIntersectionNV",
    5336 => "TerminateRayNV",
    5337 => "TraceNV",
    5338 => "TraceMotionNV",
    5339 => "TraceRayMotionNV",
    5341 => "TypeAccelerationStructureNV",
    // Ignored alias op OpTypeAccelerationStructureKHR.
    5344 => "ExecuteCallableNV",
    5358 => "TypeCooperativeMatrixNV",
    5359 => "CooperativeMatrixLoadNV",
    5360 => "CooperativeMatrixStoreNV",
    5361 => "CooperativeMatrixMulAddNV",
    5362 => "CooperativeMatrixLengthNV",
    5364 => "BeginInvocationInterlockEXT",
    5365 => "EndInvocationInterlockEXT",
    5380 => "DemoteToHelperInvocationEXT",
    5381 => "IsHelperInvocationEXT",
    5391 => "ConvertUToImageNV",
    5392 => "ConvertUToSamplerNV",
    5393 => "ConvertImageToUNV",
    5394 => "ConvertSamplerToUNV",
    5395 => "ConvertUToSampledImageNV",
    5396 => "ConvertSampledImageToUNV",
    5397 => "SamplerImageAddressingModeNV",
    5571 => "SubgroupShuffleINTEL",
    5572 => "SubgroupShuffleDownINTEL",
    5573 => "SubgroupShuffleUpINTEL",
    5574 => "SubgroupShuffleXorINTEL",
    5575 => "SubgroupBlockReadINTEL",
    5576 => "SubgroupBlockWriteINTEL",
    5577 => "SubgroupImageBlockReadINTEL",
    5578 => "SubgroupImageBlockWriteINTEL",
    5580 => "SubgroupImageMediaBlockReadINTEL",
    5581 => "SubgroupImageMediaBlockWriteINTEL",
    5585 => "UCountLeadingZerosINTEL",
    5586 => "UCountTrailingZerosINTEL",
    5587 => "AbsISubINTEL",
    5588 => "AbsUSubINTEL",
    5589 => "IAddSatINTEL",
    5590 => "UAddSatINTEL",
    5591 => "IAverageINTEL",
    5592 => "UAverageINTEL",
    5593 => "IAverageRoundedINTEL",
    5594 => "UAverageRoundedINTEL",
    5595 => "ISubSatINTEL",
    5596 => "USubSatINTEL",
    5597 => "IMul32x16INTEL",
    5598 => "UMul32x16INTEL",
    5600 => "ConstantFunctionPointerINTEL",
    5601 => "FunctionPointerCallINTEL",
    5609 => "AsmTargetINTEL",
    5610 => "AsmINTEL",
    5611 => "AsmCallINTEL",
    5614 => "AtomicFMinEXT",
    5615 => "AtomicFMaxEXT",
    5630 => "AssumeTrueKHR",
    5631 => "ExpectKHR",
    5632 => "DecorateString",
    // Ignored alias op OpDecorateStringGOOGLE.
    5633 => "MemberDecorateString",
    // Ignored alias op OpMemberDecorateStringGOOGLE.
    5699 => "VmeImageINTEL",
    5700 => "TypeVmeImageINTEL",
    5701 => "TypeAvcImePayloadINTEL",
    5702 => "TypeAvcRefPayloadINTEL",
    5703 => "TypeAvcSicPayloadINTEL",
    5704 => "TypeAvcMcePayloadINTEL",
    5705 => "TypeAvcMceResultINTEL",
    5706 => "TypeAvcImeResultINTEL",
    5707 => "TypeAvcImeResultSingleReferenceStreamoutINTEL",
    5708 => "TypeAvcImeResultDualReferenceStreamoutINTEL",
    5709 => "TypeAvcImeSingleReferenceStreaminINTEL",
    5710 => "TypeAvcImeDualReferenceStreaminINTEL",
    5711 => "TypeAvcRefResultINTEL",
    5712 => "TypeAvcSicResultINTEL",
    5713 => "SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL",
    5714 => "SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL",
    5715 => "SubgroupAvcMceGetDefaultInterShapePenaltyINTEL",
    5716 => "SubgroupAvcMceSetInterShapePenaltyINTEL",
    5717 => "SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL",
    5718 => "SubgroupAvcMceSetInterDirectionPenaltyINTEL",
    5719 => "SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL",
    5720 => "SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL",
    5721 => "SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL",
    5722 => "SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL",
    5723 => "SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL",
    5724 => "SubgroupAvcMceSetMotionVectorCostFunctionINTEL",
    5725 => "SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL",
    5726 => "SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL",
    5727 => "SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL",
    5728 => "SubgroupAvcMceSetAcOnlyHaarINTEL",
    5729 => "SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL",
    5730 => "SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL",
    5731 => "SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL",
    5732 => "SubgroupAvcMceConvertToImePayloadINTEL",
    5733 => "SubgroupAvcMceConvertToImeResultINTEL",
    5734 => "SubgroupAvcMceConvertToRefPayloadINTEL",
    5735 => "SubgroupAvcMceConvertToRefResultINTEL",
    5736 => "SubgroupAvcMceConvertToSicPayloadINTEL",
    5737 => "SubgroupAvcMceConvertToSicResultINTEL",
    5738 => "SubgroupAvcMceGetMotionVectorsINTEL",
    5739 => "SubgroupAvcMceGetInterDistortionsINTEL",
    5740 => "SubgroupAvcMceGetBestInterDistortionsINTEL",
    5741 => "SubgroupAvcMceGetInterMajorShapeINTEL",
    5742 => "SubgroupAvcMceGetInterMinorShapeINTEL",
    5743 => "SubgroupAvcMceGetInterDirectionsINTEL",
    5744 => "SubgroupAvcMceGetInterMotionVectorCountINTEL",
    5745 => "SubgroupAvcMceGetInterReferenceIdsINTEL",
    5746 => "SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL",
    5747 => "SubgroupAvcImeInitializeINTEL",
    5748 => "SubgroupAvcImeSetSingleReferenceINTEL",
    5749 => "SubgroupAvcImeSetDualReferenceINTEL",
    5750 => "SubgroupAvcImeRefWindowSizeINTEL",
    5751 => "SubgroupAvcImeAdjustRefOffsetINTEL",
    5752 => "SubgroupAvcImeConvertToMcePayloadINTEL",
    5753 => "SubgroupAvcImeSetMaxMotionVectorCountINTEL",
    5754 => "SubgroupAvcImeSetUnidirectionalMixDisableINTEL",
    5755 => "SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL",
    5756 => "SubgroupAvcImeSetWeightedSadINTEL",
    5757 => "SubgroupAvcImeEvaluateWithSingleReferenceINTEL",
    5758 => "SubgroupAvcImeEvaluateWithDualReferenceINTEL",
    5759 => "SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL",
    5760 => "SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL",
    5761 => "SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL",
    5762 => "SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL",
    5763 => "SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL",
    5764 => "SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL",
    5765 => "SubgroupAvcImeConvertToMceResultINTEL",
    5766 => "SubgroupAvcImeGetSingleReferenceStreaminINTEL",
    5767 => "SubgroupAvcImeGetDualReferenceStreaminINTEL",
    5768 => "SubgroupAvcImeStripSingleReferenceStreamoutINTEL",
    5769 => "SubgroupAvcImeStripDualReferenceStreamoutINTEL",
    5770 => "SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL",
    5771 => "SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL",
    5772 => "SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL",
    5773 => "SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL",
    5774 => "SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL",
    5775 => "SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL",
    5776 => "SubgroupAvcImeGetBorderReachedINTEL",
    5777 => "SubgroupAvcImeGetTruncatedSearchIndicationINTEL",
    5778 => "SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL",
    5779 => "SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL",
    5780 => "SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL",
    5781 => "SubgroupAvcFmeInitializeINTEL",
    5782 => "SubgroupAvcBmeInitializeINTEL",
    5783 => "SubgroupAvcRefConvertToMcePayloadINTEL",
    5784 => "SubgroupAvcRefSetBidirectionalMixDisableINTEL",
    5785 => "SubgroupAvcRefSetBilinearFilterEnableINTEL",
    5786 => "SubgroupAvcRefEvaluateWithSingleReferenceINTEL",
    5787 => "SubgroupAvcRefEvaluateWithDualReferenceINTEL",
    5788 => "SubgroupAvcRefEvaluateWithMultiReferenceINTEL",
    5789 => "SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL",
    5790 => "SubgroupAvcRefConvertToMceResultINTEL",
    5791 => "SubgroupAvcSicInitializeINTEL",
    5792 => "SubgroupAvcSicConfigureSkcINTEL",
    5793 => "SubgroupAvcSicConfigureIpeLumaINTEL",
    5794 => "SubgroupAvcSicConfigureIpeLumaChromaINTEL",
    5795 => "SubgroupAvcSicGetMotionVectorMaskINTEL",
    5796 => "SubgroupAvcSicConvertToMcePayloadINTEL",
    5797 => "SubgroupAvcSicSetIntraLumaShapePenaltyINTEL",
    5798 => "SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL",
    5799 => "SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL",
    5800 => "SubgroupAvcSicSetBilinearFilterEnableINTEL",
    5801 => "SubgroupAvcSicSetSkcForwardTransformEnableINTEL",
    5802 => "SubgroupAvcSicSetBlockBasedRawSkipSadINTEL",
    5803 => "SubgroupAvcSicEvaluateIpeINTEL",
    5804 => "SubgroupAvcSicEvaluateWithSingleReferenceINTEL",
    5805 => "SubgroupAvcSicEvaluateWithDualReferenceINTEL",
    5806 => "SubgroupAvcSicEvaluateWithMultiReferenceINTEL",
    5807 => "SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL",
    5808 => "SubgroupAvcSicConvertToMceResultINTEL",
    5809 => "SubgroupAvcSicGetIpeLumaShapeINTEL",
    5810 => "SubgroupAvcSicGetBestIpeLumaDistortionINTEL",
    5811 => "SubgroupAvcSicGetBestIpeChromaDistortionINTEL",
    5812 => "SubgroupAvcSicGetPackedIpeLumaModesINTEL",
    5813 => "SubgroupAvcSicGetIpeChromaModeINTEL",
    5814 => "SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL",
    5815 => "SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL",
    5816 => "SubgroupAvcSicGetInterRawSadsINTEL",
    5818 => "VariableLengthArrayINTEL",
    5819 => "SaveMemoryINTEL",
    5820 => "RestoreMemoryINTEL",
    5840 => "ArbitraryFloatSinCosPiINTEL",
    5841 => "ArbitraryFloatCastINTEL",
    5842 => "ArbitraryFloatCastFromIntINTEL",
    5843 => "ArbitraryFloatCastToIntINTEL",
    5846 => "ArbitraryFloatAddINTEL",
    5847 => "ArbitraryFloatSubINTEL",
    5848 => "ArbitraryFloatMulINTEL",
    5849 => "ArbitraryFloatDivINTEL",
    5850 => "ArbitraryFloatGTINTEL",
    5851 => "ArbitraryFloatGEINTEL",
    5852 => "ArbitraryFloatLTINTEL",
    5853 => "ArbitraryFloatLEINTEL",
    5854 => "ArbitraryFloatEQINTEL",
    5855 => "ArbitraryFloatRecipINTEL",
    5856 => "ArbitraryFloatRSqrtINTEL",
    5857 => "ArbitraryFloatCbrtINTEL",
    5858 => "ArbitraryFloatHypotINTEL",
    5859 => "ArbitraryFloatSqrtINTEL",
    5860 => "ArbitraryFloatLogINTEL",
    5861 => "ArbitraryFloatLog2INTEL",
    5862 => "ArbitraryFloatLog10INTEL",
    5863 => "ArbitraryFloatLog1pINTEL",
    5864 => "ArbitraryFloatExpINTEL",
    5865 => "ArbitraryFloatExp2INTEL",
    5866 => "ArbitraryFloatExp10INTEL",
    5867 => "ArbitraryFloatExpm1INTEL",
    5868 => "ArbitraryFloatSinINTEL",
    5869 => "ArbitraryFloatCosINTEL",
    5870 => "ArbitraryFloatSinCosINTEL",
    5871 => "ArbitraryFloatSinPiINTEL",
    5872 => "ArbitraryFloatCosPiINTEL",
    5873 => "ArbitraryFloatASinINTEL",
    5874 => "ArbitraryFloatASinPiINTEL",
    5875 => "ArbitraryFloatACosINTEL",
    5876 => "ArbitraryFloatACosPiINTEL",
    5877 => "ArbitraryFloatATanINTEL",
    5878 => "ArbitraryFloatATanPiINTEL",
    5879 => "ArbitraryFloatATan2INTEL",
    5880 => "ArbitraryFloatPowINTEL",
    5881 => "ArbitraryFloatPowRINTEL",
    5882 => "ArbitraryFloatPowNINTEL",
    5887 => "LoopControlINTEL",
    5923 => "FixedSqrtINTEL",
    5924 => "FixedRecipINTEL",
    5925 => "FixedRsqrtINTEL",
    5926 => "FixedSinINTEL",
    5927 => "FixedCosINTEL",
    5928 => "FixedSinCosINTEL",
    5929 => "FixedSinPiINTEL",
    5930 => "FixedCosPiINTEL",
    5931 => "FixedSinCosPiINTEL",
    5932 => "FixedLogINTEL",
    5933 => "FixedExpINTEL",
    5934 => "PtrCastToCrossWorkgroupINTEL",
    5938 => "CrossWorkgroupCastToPtrINTEL",
    5946 => "ReadPipeBlockingINTEL",
    5947 => "WritePipeBlockingINTEL",
    5949 => "FPGARegINTEL",
    6016 => "RayQueryGetRayTMinKHR",
    6017 => "RayQueryGetRayFlagsKHR",
    6018 => "RayQueryGetIntersectionTKHR",
    6019 => "RayQueryGetIntersectionInstanceCustomIndexKHR",
    6020 => "RayQueryGetIntersectionInstanceIdKHR",
    6021 => "RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR",
    6022 => "RayQueryGetIntersectionGeometryIndexKHR",
    6023 => "RayQueryGetIntersectionPrimitiveIndexKHR",
    6024 => "RayQueryGetIntersectionBarycentricsKHR",
    6025 => "RayQueryGetIntersectionFrontFaceKHR",
    6026 => "RayQueryGetIntersectionCandidateAABBOpaqueKHR",
    6027 => "RayQueryGetIntersectionObjectRayDirectionKHR",
    6028 => "RayQueryGetIntersectionObjectRayOriginKHR",
    6029 => "RayQueryGetWorldRayDirectionKHR",
    6030 => "RayQueryGetWorldRayOriginKHR",
    6031 => "RayQueryGetIntersectionObjectToWorldKHR",
    6032 => "RayQueryGetIntersectionWorldToObjectKHR",
    6035 => "AtomicFAddEXT",
    6086 => "TypeBufferSurfaceINTEL",
    6090 => "TypeStructContinuedINTEL",
    6091 => "ConstantCompositeContinuedINTEL",
    6092 => "SpecConstantCompositeContinuedINTEL",
    _ => "Unknown",
  }
}
